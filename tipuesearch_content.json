{"pages":[{"title":"相册","text":"","tags":"Miscellaneous","url":"http://faigogo.com/photo"},{"title":"关于","text":"BackEnd Developer Python/C/C++/Lua Qt/PyQt5 DICOM / PACS / VTK / ITK Flask/Tornado Celery/ MQ /Redis Email: siufaigo@126.com","tags":"Miscellaneous","url":"http://faigogo.com/about"},{"title":"编码问题","text":"原文链接","tags":"编码","url":"http://faigogo.com/编码-编码"},{"title":"正则表达式字符集","text":"字符 描述 \\ 将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，\"n\"匹配字符\"n\"。\"\\n\"匹配一个换行符。串行\"\\\"匹配\"\\\"而\"(\"则匹配\"(\"。 &#94; 匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，&#94;也匹配\"\\n\"或\"\\r\"之后的位置。 $ 匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配\"\\n\"或\"\\r\"之前的位置。 * 匹配前面的子表达式零次或多次。例如，zo 能匹配\"z\"以及\"zoo\"。 等价于{0,}。 + 匹配前面的子表达式一次或多次。例如，\"zo+\"能匹配\"zo\"以及\"zoo\"，但不能匹配\"z\"。+等价于 ? 匹配前面的子表达式零次或一次。例如，\"do(es)?\"可以匹配\"does\"或\"does\"中的\"do\"。?等价于 {n} n是一个非负整数。匹配确定的n次。例如，\"o {n,} n是一个非负整数。至少匹配n次。例如，\"o {n,m} m和n均为非负整数，其中n<=m。最少匹配n次且最多匹配m次。例如，\"o ? 当该字符紧跟在任何一个其他限制符（*,+,?， . 匹配除\"\\n\"之外的任何单个字符。要匹配包括\"\\n\"在内的任何字符，请使用像\"(.|\\n)\"的模式。 (pattern) 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用\"(\"或\")\"。 (?:pattern) 匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符\"(|)\"来组合一个模式的各个部分是很有用。例如\"industr(?:y|ies)\"就是一个比\"industry|industries\"更简略的表达式。 (?=pattern) 正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，\"Windows(?=95|98| NT |2000)\"能匹配\"Windows2000\"中的\"Windows\"，但不能匹配\"Windows3.1\"中的\"Windows\"。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。 (?!pattern) 正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如\"Windows(?!95|98| NT |2000)\"能匹配\"Windows3.1\"中的\"Windows\"，但不能匹配\"Windows2000\"中的\"Windows\"。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始 (?<=pattern) 反向肯定预查，与正向肯定预查类似，只是方向相反。例如，\"(?<=95|98| NT |2000)Windows\"能匹配\"2000Windows\"中的\"Windows\"，但不能匹配\"3.1Windows\"中的\"Windows\"。 (?<!pattern) 反向否定预查，与正向否定预查类似，只是方向相反。例如\"(?<!95|98| NT |2000)Windows\"能匹配\"3.1Windows\"中的\"Windows\"，但不能匹配\"2000Windows\"中的\"Windows\"。 x|y 匹配x或y。例如，\"z|food\"能匹配\"z\"或\"food\"。\"(z|f)ood\"则匹配\"zood\"或\"food\"。 [xyz] 字符集合。匹配所包含的任意一个字符。例如，\"[abc]\"可以匹配\"plain\"中的\"a\"。 [&#94;xyz] 负值字符集合。匹配未包含的任意字符。例如，\"[&#94;abc]\"可以匹配\"plain\"中的\"p\"。 [a-z] 字符范围。匹配指定范围内的任意字符。例如，\"[a-z]\"可以匹配\"a\"到\"z\"范围内的任意小写字母字符。 [&#94;a-z] 负值字符范围。匹配任何不在指定范围内的任意字符。例如，\"[&#94;a-z]\"可以匹配任何不在\"a\"到\"z\"范围内的任意字符。 \\b 匹配一个单词边界，也就是指单词和空格间的位置。例如，\"er\\b\"可以匹配\"never\"中的\"er\"，但不能匹配\"verb\"中的\"er\"。 \\B 匹配非单词边界。\"er\\B\"能匹配\"verb\"中的\"er\"，但不能匹配\"never\"中的\"er\"。 \\cx 匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的\"c\"字符。 \\d 匹配一个数字字符。等价于[0-9]。 \\D 匹配一个非数字字符。等价于[&#94;0-9]。 \\f 匹配一个换页符。等价于\\x0c和\\cL。 \\n 匹配一个换行符。等价于\\x0a和\\cJ。 \\r 匹配一个回车符。等价于\\x0d和\\cM。 \\s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[\\f\\n\\r\\t\\v]。 \\S 匹配任何非空白字符。等价于[&#94;\\f\\n\\r\\t\\v]。 \\t 匹配一个制表符。等价于\\x09和\\cI。 \\v 匹配一个垂直制表符。等价于\\x0b和\\cK。 \\w 匹配包括下划线的任何单词字符。等价于\"[A-Za-z0-9_]\"。 \\W 匹配任何非单词字符。等价于\"[&#94;A-Za-z0-9_]\"。 \\xn 匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，\"\\x41\"匹配\"A\"。\"\\x041\"则等价于\"\\x04&1\"。正则表达式中可以使用ASCII编码。. \\num 匹配num，其中num是一个正整数。引用。对所获取的匹配的例如，\"(.)\\1\"匹配两个连续的相同字符。 \\n 标识一个八进制转义值或一个向后引用。如果\\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。 \\nm 标识一个八进制转义值或一个向后引用。如果\\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\\nm将匹配八进制转义值nm。 \\nml 如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。 \\un 匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）。","tags":"regex","url":"http://faigogo.com/regex"},{"title":"隐藏标准输出、错误","text":"python隐藏标准输入输出的方法(使用 subprocess 时遇到的输出问题，不想让程序输出乱七八糟的信息) 使用 os.devnull DEVNULL = open(os.devnull, 'wb') subprocess.Popen([exename, args], stdout=DEVNULL, stderr=subprocess.STDOUT) 用完这种方式，感觉有点太狠了，把所有的输出信息全隐藏了，如果调用出错，也很难知道出错原因。 所以想能不能有方法将输出重定向到 logging ?","tags":"Python","url":"http://faigogo.com/python-hide-stdout"},{"title":"any all函数用法","text":"python any all 函数用法 any() Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. 当传入空可迭代对象时返回False，当可迭代对象中有任意一个不为False，则返回True all() Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. 当传入空可迭代对象时返回True，当可迭代对象中有任意一个不为True，则返回False 简单用法 判断list中是否含有False或True值 any ([ 1 ,2,0 ]) = > True any ([ 0 , '' ]) = > False all ([ 1 ,2,0 ]) = > False all ([ 1 ,2 ]) = > True 判断字符串中是否包含指定list中的字符串 any ( x in 'ipad' for x in [ 'iphone' , 'ipad' ]) = > True list all in sepcified string all ( x in 'ipadabciphone' for x in [ 'iphone' , 'ipad' ]) = > True","tags":"Python","url":"http://faigogo.com/python-any-all"},{"title":"GDCM SCU","text":"使用python gdcm编写dicom scu,c-find/c-move/c-store 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 def _getQuery ( kwargs ): queryKeys = gdcm . DataSet () for key in kwargs : if key != studyUIDTag : continue de = gdcm . DataElement () de . SetTag ( key ) de . SetByteValue ( kwargs [ key ], gdcm . VL ( len ( kwargs [ key ]))) queryKeys . Insert ( de ) #ePatientRootType,eStudyRootType # ePatient,eStudy,eSeries,eImage query = gdcm . CompositeNetworkFunctions_ConstructQuery ( gdcm . eStudyRootType , gdcm . eStudy , queryKeys , True ) return query scu = gdcm . ServiceClassUser () scu . SetHostname ( MOVE_CONFIG [ 'host' ]) scu . SetPort ( MOVE_CONFIG [ 'port' ]) scu . SetTimeout ( 100 ) scu . SetCalledAETitle ( MOVE_CONFIG [ 'callAE' ]) scu . SetAETitle ( MOVE_CONFIG [ 'callingAE' ]) scu . SetPortSCP ( MOVE_CONFIG [ 'retrievePort' ]) query = _getQuery ( { studyUIDTag : studyUID , seriesUIDTag : seriesUID , sopUIDTag : sopUID }) print 'query:' , query . ValidateQuery () print 'InitializeConnection:' , scu . InitializeConnection () generator = gdcm . PresentationContextGenerator () generator . GenerateFromUID ( query . GetAbstractSyntaxUID ()) # !!! scu . SetPresentationContexts ( generator . GetPresentationContexts ()) if scu . StartAssociation (): # print 'Echo:',scu.SendEcho() res = gdcm . DataSetArrayType () # if scu.SendFind(query, res): if scu . SendMove ( query , MOVE_CONFIG [ 'path' ]): pass # for dataset in res: # print dataset.GetDataElement(studyUIDTag) # print dataset.GetDataElement(seriesUIDTag) # print dataset.GetDataElement(sopUIDTag) scu . StopAssociation ()","tags":"Python","url":"http://faigogo.com/python-gdcm-scu"}]}